<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.shopmanager.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.shopmanager.bean.Order">
    <id column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="CHAR" property="userName" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="account_receivable" jdbcType="DECIMAL" property="accountReceivable" />
    <result column="funds_received" jdbcType="DECIMAL" property="fundsReceived" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="give_clothes_time" jdbcType="TIMESTAMP" property="giveClothesTime" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="clerk" jdbcType="CHAR" property="clerk" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="spare3" jdbcType="VARCHAR" property="spare3" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.atguigu.shopmanager.bean.OrderWithBLOBs">
    <result column="spare1" jdbcType="VARBINARY" property="spare1" />
    <result column="spare2" jdbcType="VARBINARY" property="spare2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_num, id, user_name, phone, account_receivable, funds_received, count, status, 
    give_clothes_time, order_time, clerk, remark, spare3
  </sql>
  <sql id="Blob_Column_List">
    spare1, spare2
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.atguigu.shopmanager.bean.OrderExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.atguigu.shopmanager.bean.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_order
    where order_num = #{orderNum,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where order_num = #{orderNum,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.shopmanager.bean.OrderExample">
    delete from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.shopmanager.bean.OrderWithBLOBs">
    insert into t_order (order_num, id, user_name, 
      phone, account_receivable, funds_received, 
      count, status, give_clothes_time, 
      order_time, clerk, remark, 
      spare3, spare1, spare2
      )
    values (#{orderNum,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, #{userName,jdbcType=CHAR}, 
      #{phone,jdbcType=CHAR}, #{accountReceivable,jdbcType=DECIMAL}, #{fundsReceived,jdbcType=DECIMAL}, 
      #{count,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{giveClothesTime,jdbcType=TIMESTAMP}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{clerk,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, 
      #{spare3,jdbcType=VARCHAR}, #{spare1,jdbcType=VARBINARY}, #{spare2,jdbcType=VARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.shopmanager.bean.OrderWithBLOBs">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="accountReceivable != null">
        account_receivable,
      </if>
      <if test="fundsReceived != null">
        funds_received,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="giveClothesTime != null">
        give_clothes_time,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="clerk != null">
        clerk,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="spare3 != null">
        spare3,
      </if>
      <if test="spare1 != null">
        spare1,
      </if>
      <if test="spare2 != null">
        spare2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="accountReceivable != null">
        #{accountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="fundsReceived != null">
        #{fundsReceived,jdbcType=DECIMAL},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="giveClothesTime != null">
        #{giveClothesTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clerk != null">
        #{clerk,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare1 != null">
        #{spare1,jdbcType=VARBINARY},
      </if>
      <if test="spare2 != null">
        #{spare2,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.shopmanager.bean.OrderExample" resultType="java.lang.Long">
    select count(*) from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order
    <set>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.accountReceivable != null">
        account_receivable = #{record.accountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="record.fundsReceived != null">
        funds_received = #{record.fundsReceived,jdbcType=DECIMAL},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.giveClothesTime != null">
        give_clothes_time = #{record.giveClothesTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clerk != null">
        clerk = #{record.clerk,jdbcType=CHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.spare3 != null">
        spare3 = #{record.spare3,jdbcType=VARCHAR},
      </if>
      <if test="record.spare1 != null">
        spare1 = #{record.spare1,jdbcType=VARBINARY},
      </if>
      <if test="record.spare2 != null">
        spare2 = #{record.spare2,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_order
    set order_num = #{record.orderNum,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=CHAR},
      account_receivable = #{record.accountReceivable,jdbcType=DECIMAL},
      funds_received = #{record.fundsReceived,jdbcType=DECIMAL},
      count = #{record.count,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      give_clothes_time = #{record.giveClothesTime,jdbcType=TIMESTAMP},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      clerk = #{record.clerk,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      spare3 = #{record.spare3,jdbcType=VARCHAR},
      spare1 = #{record.spare1,jdbcType=VARBINARY},
      spare2 = #{record.spare2,jdbcType=VARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order
    set order_num = #{record.orderNum,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=CHAR},
      account_receivable = #{record.accountReceivable,jdbcType=DECIMAL},
      funds_received = #{record.fundsReceived,jdbcType=DECIMAL},
      count = #{record.count,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      give_clothes_time = #{record.giveClothesTime,jdbcType=TIMESTAMP},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      clerk = #{record.clerk,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      spare3 = #{record.spare3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.shopmanager.bean.OrderWithBLOBs">
    update t_order
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="accountReceivable != null">
        account_receivable = #{accountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="fundsReceived != null">
        funds_received = #{fundsReceived,jdbcType=DECIMAL},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="giveClothesTime != null">
        give_clothes_time = #{giveClothesTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clerk != null">
        clerk = #{clerk,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare1 != null">
        spare1 = #{spare1,jdbcType=VARBINARY},
      </if>
      <if test="spare2 != null">
        spare2 = #{spare2,jdbcType=VARBINARY},
      </if>
    </set>
    where order_num = #{orderNum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.atguigu.shopmanager.bean.OrderWithBLOBs">
    update t_order
    set id = #{id,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      account_receivable = #{accountReceivable,jdbcType=DECIMAL},
      funds_received = #{fundsReceived,jdbcType=DECIMAL},
      count = #{count,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      give_clothes_time = #{giveClothesTime,jdbcType=TIMESTAMP},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      clerk = #{clerk,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR},
      spare1 = #{spare1,jdbcType=VARBINARY},
      spare2 = #{spare2,jdbcType=VARBINARY}
    where order_num = #{orderNum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.shopmanager.bean.Order">
    update t_order
    set id = #{id,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      account_receivable = #{accountReceivable,jdbcType=DECIMAL},
      funds_received = #{fundsReceived,jdbcType=DECIMAL},
      count = #{count,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      give_clothes_time = #{giveClothesTime,jdbcType=TIMESTAMP},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      clerk = #{clerk,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR}
    where order_num = #{orderNum,jdbcType=INTEGER}
  </update>
</mapper>